---
// src/pages/dashboard.astro
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import { SITE } from "@/config";

const pageTitle = "Bitcoin Treasury Dashboard";
---

<Layout title={pageTitle}>
  <Header activeNav="dashboard" />
  <main id="main-content">
    <section class="dashboard-container">
      <div class="dashboard-header">
        <h1>Bitcoin Treasury & Lightning Dashboard</h1>
        <p class="last-updated">Last updated: <span id="last-update"></span></p>
      </div>

      <!-- Treasury Overview -->
      <div class="card-grid">
        <div class="card treasury-card">
          <h2>üè¶ Treasury Overview</h2>
          <div class="metric-row">
            <div class="metric">
              <span class="metric-label">Total BTC Holdings</span>
              <span class="metric-value" id="total-btc">21.5000</span>
              <span class="metric-unit">BTC</span>
            </div>
            <div class="metric">
              <span class="metric-label">USD Value</span>
              <span class="metric-value" id="usd-value">$945,000</span>
            </div>
          </div>
          <div class="metric-row">
            <div class="metric">
              <span class="metric-label">Average Cost Basis</span>
              <span class="metric-value" id="avg-cost">$35,200</span>
            </div>
            <div class="metric">
              <span class="metric-label">Unrealized P&L</span>
              <span class="metric-value profit" id="unrealized-pnl">+$188,200</span>
            </div>
          </div>
        </div>

        <!-- Lightning Node Stats -->
        <div class="card lightning-card">
          <h2>‚ö° Lightning Node</h2>
          <div class="node-status">
            <span class="status-indicator online"></span>
            <span>Node Online</span>
          </div>
          <div class="metric-row">
            <div class="metric">
              <span class="metric-label">Channels</span>
              <span class="metric-value" id="channels">24</span>
            </div>
            <div class="metric">
              <span class="metric-label">Capacity</span>
              <span class="metric-value" id="capacity">5.2500</span>
              <span class="metric-unit">BTC</span>
            </div>
          </div>
          <div class="metric-row">
            <div class="metric">
              <span class="metric-label">Local Balance</span>
              <span class="metric-value" id="local-balance">2.8500</span>
              <span class="metric-unit">BTC</span>
            </div>
            <div class="metric">
              <span class="metric-label">Remote Balance</span>
              <span class="metric-value" id="remote-balance">2.4000</span>
              <span class="metric-unit">BTC</span>
            </div>
          </div>
        </div>

        <!-- Price & Market -->
        <div class="card price-card">
          <h2>üìà Market Data</h2>
          <div class="metric-row">
            <div class="metric">
              <span class="metric-label">BTC Price</span>
              <span class="metric-value" id="btc-price">$43,950</span>
            </div>
            <div class="metric">
              <span class="metric-label">24h Change</span>
              <span class="metric-value profit" id="price-change">+2.4%</span>
            </div>
          </div>
          <div class="metric-row">
            <div class="metric">
              <span class="metric-label">Market Cap</span>
              <span class="metric-value" id="market-cap">$861B</span>
            </div>
            <div class="metric">
              <span class="metric-label">Fear & Greed</span>
              <span class="metric-value" id="fear-greed">72 (Greed)</span>
            </div>
          </div>
        </div>

        <!-- Recent Activity -->
        <div class="card activity-card">
          <h2>üìä Recent Activity</h2>
          <div class="activity-list">
            <div class="activity-item">
              <span class="activity-type buy">BUY</span>
              <span class="activity-amount">0.5000 BTC</span>
              <span class="activity-date">2 days ago</span>
            </div>
            <div class="activity-item">
              <span class="activity-type channel">CHANNEL</span>
              <span class="activity-amount">Opened 1M sats</span>
              <span class="activity-date">5 days ago</span>
            </div>
            <div class="activity-item">
              <span class="activity-type routing">ROUTING</span>
              <span class="activity-amount">+2,500 sats</span>
              <span class="activity-date">1 week ago</span>
            </div>
          </div>
        </div>
      </div>

      <!-- Holdings Breakdown -->
      <div class="holdings-section">
        <h2>Bitcoin Holdings Breakdown</h2>
        <div class="holdings-grid">
          <div class="holding-item">
            <div class="holding-header">
              <h3>Cold Storage</h3>
              <span class="holding-percentage">75%</span>
            </div>
            <div class="holding-amount">16.1250 BTC</div>
            <div class="holding-bar">
              <div class="holding-fill" style="width: 75%"></div>
            </div>
          </div>
          <div class="holding-item">
            <div class="holding-header">
              <h3>Lightning Channels</h3>
              <span class="holding-percentage">24%</span>
            </div>
            <div class="holding-amount">5.2500 BTC</div>
            <div class="holding-bar">
              <div class="holding-fill" style="width: 24%"></div>
            </div>
          </div>
          <div class="holding-item">
            <div class="holding-header">
              <h3>Hot Wallet</h3>
              <span class="holding-percentage">1%</span>
            </div>
            <div class="holding-amount">0.1250 BTC</div>
            <div class="holding-bar">
              <div class="holding-fill" style="width: 1%"></div>
            </div>
          </div>
        </div>
      </div>

      <!-- Performance Chart Placeholder -->
      <div class="chart-section">
        <h2>Portfolio Performance (30 Days)</h2>
        <div class="chart-placeholder">
          <canvas id="performanceChart" width="800" height="300"></canvas>
        </div>
      </div>

      <!-- Additional Metrics Section -->
      <div class="metrics-grid">
        <div class="metric-card">
          <h3>‚ö° Lightning Metrics</h3>
          <div class="mini-metrics">
            <div class="mini-metric">
              <span class="mini-label">Routing Revenue (30d)</span>
              <span class="mini-value">125,000 sats</span>
            </div>
            <div class="mini-metric">
              <span class="mini-label">Successful Routes</span>
              <span class="mini-value">1,247</span>
            </div>
            <div class="mini-metric">
              <span class="mini-label">Avg Route Size</span>
              <span class="mini-value">50,000 sats</span>
            </div>
          </div>
        </div>

        <div class="metric-card">
          <h3>üîí Security Status</h3>
          <div class="security-items">
            <div class="security-item">
              <span class="security-icon">‚úÖ</span>
              <span>Hardware Wallet Connected</span>
            </div>
            <div class="security-item">
              <span class="security-icon">‚úÖ</span>
              <span>Multi-sig Setup Active</span>
            </div>
            <div class="security-item">
              <span class="security-icon">‚úÖ</span>
              <span>Backup Verified</span>
            </div>
          </div>
        </div>

        <div class="metric-card">
          <h3>üìà DCA Strategy</h3>
          <div class="dca-info">
            <div class="dca-item">
              <span class="dca-label">Next Purchase</span>
              <span class="dca-value">2 days</span>
            </div>
            <div class="dca-item">
              <span class="dca-label">Weekly Amount</span>
              <span class="dca-value">$1,000</span>
            </div>
            <div class="dca-item">
              <span class="dca-label">YTD Purchased</span>
              <span class="dca-value">5.2 BTC</span>
            </div>
          </div>
        </div>
      </div>

      <!-- Alerts Section -->
      <div class="alerts-section">
        <h2>üö® Alerts & Notifications</h2>
        <div class="alerts-container">
          <div class="alert alert-info">
            <span class="alert-icon">‚ÑπÔ∏è</span>
            <div class="alert-content">
              <strong>Channel Rebalancing</strong>
              <p>Channel with ACINQ needs rebalancing - 85% remote</p>
            </div>
            <span class="alert-time">2h ago</span>
          </div>
          <div class="alert alert-success">
            <span class="alert-icon">‚úÖ</span>
            <div class="alert-content">
              <strong>DCA Purchase Complete</strong>
              <p>Successfully purchased 0.025 BTC at $43,200</p>
            </div>
            <span class="alert-time">1d ago</span>
          </div>
        </div>
      </div>
    </section>
  </main>
  <Footer />
</Layout>

<style>
  .dashboard-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .dashboard-header {
    text-align: center;
    margin-bottom: 2rem;
  }

  .dashboard-header h1 {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
    background: linear-gradient(135deg, #f7931a, #ff6b35);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .last-updated {
    color: var(--color-text-muted);
    font-size: 0.9rem;
  }

  .card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .card {
    background: var(--color-card);
    border: 1px solid var(--color-border);
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  }

  .card h2 {
    margin: 0 0 1rem 0;
    font-size: 1.2rem;
    color: var(--color-accent);
  }

  .metric-row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 1rem;
  }

  .metric {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .metric-label {
    font-size: 0.8rem;
    color: var(--color-text-muted);
    margin-bottom: 0.25rem;
  }

  .metric-value {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--color-text);
  }

  .metric-unit {
    font-size: 0.9rem;
    color: var(--color-text-muted);
  }

  .profit {
    color: #10b981;
  }

  .loss {
    color: #ef4444;
  }

  .node-status {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .status-indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
  }

  .status-indicator.online {
    background-color: #10b981;
    box-shadow: 0 0 8px rgba(16, 185, 129, 0.5);
  }

  .activity-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .activity-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem;
    background: var(--color-fill);
    border-radius: 6px;
  }

  .activity-type {
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: bold;
    text-transform: uppercase;
  }

  .activity-type.buy {
    background-color: #10b981;
    color: white;
  }

  .activity-type.channel {
    background-color: #3b82f6;
    color: white;
  }

  .activity-type.routing {
    background-color: #f59e0b;
    color: white;
  }

  .activity-amount {
    font-weight: bold;
  }

  .activity-date {
    font-size: 0.8rem;
    color: var(--color-text-muted);
  }

  .holdings-section {
    margin-bottom: 2rem;
  }

  .holdings-section h2 {
    margin-bottom: 1rem;
    color: var(--color-accent);
  }

  .holdings-grid {
    display: grid;
    gap: 1rem;
  }

  .holding-item {
    background: var(--color-card);
    border: 1px solid var(--color-border);
    border-radius: 8px;
    padding: 1rem;
  }

  .holding-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
  }

  .holding-header h3 {
    margin: 0;
    font-size: 1rem;
  }

  .holding-percentage {
    font-weight: bold;
    color: var(--color-accent);
  }

  .holding-amount {
    font-size: 1.2rem;
    font-weight: bold;
    margin-bottom: 0.5rem;
  }

  .holding-bar {
    width: 100%;
    height: 8px;
    background-color: var(--color-fill);
    border-radius: 4px;
    overflow: hidden;
  }

  .holding-fill {
    height: 100%;
    background: linear-gradient(90deg, #f7931a, #ff6b35);
    transition: width 0.3s ease;
  }

  .chart-section {
    margin-bottom: 2rem;
  }

  .chart-section h2 {
    margin-bottom: 1rem;
    color: var(--color-accent);
  }

  .chart-placeholder {
    background: var(--color-card);
    border: 1px solid var(--color-border);
    border-radius: 8px;
    padding: 1rem;
    text-align: center;
    min-height: 300px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  #performanceChart {
    max-width: 100%;
    height: auto;
  }

  @media (max-width: 768px) {
    .card-grid {
      grid-template-columns: 1fr;
    }
    
    .metric-row {
      flex-direction: column;
      gap: 1rem;
    }
    
    .dashboard-header h1 {
      font-size: 2rem;
    }
  }

  /* Additional styles for enhanced features */
  .metrics-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .metric-card {
    background: var(--color-card);
    border: 1px solid var(--color-border);
    border-radius: 8px;
    padding: 1rem;
  }

  .metric-card h3 {
    margin: 0 0 1rem 0;
    font-size: 1rem;
    color: var(--color-accent);
  }

  .mini-metrics {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .mini-metric {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .mini-label {
    font-size: 0.8rem;
    color: var(--color-text-muted);
  }

  .mini-value {
    font-weight: bold;
    color: var(--color-text);
  }

  .security-items {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .security-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
  }

  .security-icon {
    font-size: 1rem;
  }

  .dca-info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .dca-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .dca-label {
    font-size: 0.8rem;
    color: var(--color-text-muted);
  }

  .dca-value {
    font-weight: bold;
    color: var(--color-text);
  }

  .alerts-section {
    margin-bottom: 2rem;
  }

  .alerts-section h2 {
    margin-bottom: 1rem;
    color: var(--color-accent);
  }

  .alerts-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .alert {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    padding: 1rem;
    border-radius: 8px;
    border-left: 4px solid;
  }

  .alert-info {
    background: rgba(59, 130, 246, 0.1);
    border-left-color: #3b82f6;
  }

  .alert-success {
    background: rgba(16, 185, 129, 0.1);
    border-left-color: #10b981;
  }

  .alert-content {
    flex: 1;
  }

  .alert-content strong {
    display: block;
    margin-bottom: 0.25rem;
    color: var(--color-text);
  }

  .alert-content p {
    margin: 0;
    font-size: 0.9rem;
    color: var(--color-text-muted);
  }

  .alert-time {
    font-size: 0.8rem;
    color: var(--color-text-muted);
    white-space: nowrap;
  }

  /* Dark mode adjustments */
  @media (prefers-color-scheme: dark) {
    .card {
      background: rgba(255, 255, 255, 0.05);
      border-color: rgba(255, 255, 255, 0.1);
    }
    
    .metric-card {
      background: rgba(255, 255, 255, 0.05);
      border-color: rgba(255, 255, 255, 0.1);
    }
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .metrics-grid {
      grid-template-columns: 1fr;
    }
    
    .alert {
      flex-direction: column;
      gap: 0.5rem;
    }
    
    .alert-time {
      align-self: flex-start;
    }
  }
</style>

<script>
  // Update timestamp
  document.getElementById('last-update').textContent = new Date().toLocaleString();

  // Simple chart placeholder (you can integrate Chart.js or similar)
  const canvas = document.getElementById('performanceChart');
  const ctx = canvas.getContext('2d');
  
  // Draw a simple line chart placeholder
  ctx.strokeStyle = '#f7931a';
  ctx.lineWidth = 2;
  ctx.beginPath();
  ctx.moveTo(50, 250);
  ctx.lineTo(150, 200);
  ctx.lineTo(250, 180);
  ctx.lineTo(350, 220);
  ctx.lineTo(450, 160);
  ctx.lineTo(550, 140);
  ctx.lineTo(650, 120);
  ctx.lineTo(750, 100);
  ctx.stroke();
  
  // Add some grid lines
  ctx.strokeStyle = '#e5e7eb';
  ctx.lineWidth = 1;
  for (let i = 100; i < 300; i += 50) {
    ctx.beginPath();
    ctx.moveTo(50, i);
    ctx.lineTo(750, i);
    ctx.stroke();
  }

  // Auto-refresh data every 30 seconds (placeholder)
  setInterval(() => {
    // Here you would fetch real data from your APIs
    console.log('Refreshing dashboard data...');
    document.getElementById('last-update').textContent = new Date().toLocaleString();
  }, 30000);

  // Add some animation to the holding bars
  setTimeout(() => {
    const bars = document.querySelectorAll('.holding-fill');
    bars.forEach(bar => {
      const width = bar.style.width;
      bar.style.width = '0%';
      setTimeout(() => {
        bar.style.width = width;
      }, 100);
    });
  }, 500);

  // Mock real-time price updates
  function updatePrices() {
    const btcPrice = document.getElementById('btc-price');
    const currentPrice = parseFloat(btcPrice.textContent.replace('$', '').replace(',', ''));
    const change = (Math.random() - 0.5) * 100;
    const newPrice = Math.max(currentPrice + change, 1000);
    
    btcPrice.textContent = `$${newPrice.toLocaleString()}`;
    
    // Update USD value
    const totalBtc = parseFloat(document.getElementById('total-btc').textContent);
    const usdValue = document.getElementById('usd-value');
    usdValue.textContent = `$${(totalBtc * newPrice).toLocaleString()}`;
  }

  // Update prices every 10 seconds for demo
  setInterval(updatePrices, 10000);
</script>

