---
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import { quizSets } from "@/data/quiz";

const pageTitle = "Bitcoin Quiz";
const pageDesc = "Test your Bitcoin knowledge with this interactive quiz";
---

<Layout title={pageTitle} desc={pageDesc}>
  <Header />
  <main id="main-content">
    <section class="quiz-container">
      <div class="quiz-header">
        <h1>Bitcoin Knowledge Quiz</h1>
        <p>Test your understanding of Bitcoin - each session features a different quiz set!</p>
      </div>

      <div id="quiz-app">
        <div id="quiz-selector" class="selector-card">
          <h2>üé≤ Random Quiz Selected</h2>
          <div class="selected-quiz">
            <h3 id="quiz-title"></h3>
            <p id="quiz-description"></p>
            <div class="quiz-info">
              <span id="question-count"></span> questions
            </div>
          </div>
          <button id="start-btn" class="start-button">Start Quiz</button>
          <button id="change-quiz-btn" class="change-button">üé≤ Pick Different Quiz</button>
        </div>

        <div id="question-container" class="question-card" style="display: none;">
          <div class="quiz-meta">
            <div class="quiz-name" id="current-quiz-name"></div>
            <div class="progress-bar">
              <div id="progress" class="progress-fill"></div>
            </div>
          </div>
          
          <div class="question-number">
            Question <span id="current-q">1</span> of <span id="total-q">4</span>
          </div>
          
          <h2 id="question-text"></h2>
          
          <div id="options-container" class="options"></div>
          
          <button id="next-btn" class="next-button" style="display: none;">
            Next Question
          </button>
        </div>

        <div id="results-container" class="results-card" style="display: none;">
          <h2>üéâ Quiz Complete!</h2>
          <div class="completed-quiz">
            <strong id="completed-quiz-name"></strong>
          </div>
          <div class="score-display">
            <div class="score-circle">
              <span id="score-percentage">0%</span>
              <small id="score-fraction">0/0</small>
            </div>
          </div>
          <p id="score-message"></p>
          <div class="result-actions">
            <button id="restart-btn" class="restart-button">üîÑ Retake This Quiz</button>
            <button id="new-quiz-btn" class="new-quiz-button">üé≤ Try Different Quiz</button>
          </div>
        </div>
      </div>
    </section>
  </main>
  <Footer />
</Layout>

<script define:vars={{ allQuizSets: quizSets }}>
  class BitcoinQuiz {
    constructor(quizSets) {
      this.quizSets = quizSets;
      this.currentQuizSet = null;
      this.currentQuestion = 0;
      this.score = 0;
      this.selectedAnswer = null;
      this.init();
    }

    init() {
      this.selectRandomQuiz();
      this.bindEvents();
    }

    selectRandomQuiz() {
      const randomIndex = Math.floor(Math.random() * this.quizSets.length);
      this.currentQuizSet = this.quizSets[randomIndex];
      this.showQuizSelector();
    }

    showQuizSelector() {
      document.getElementById('quiz-title').textContent = this.currentQuizSet.title;
      document.getElementById('quiz-description').textContent = this.currentQuizSet.description;
      document.getElementById('question-count').textContent = this.currentQuizSet.questions.length;
      
      document.getElementById('quiz-selector').style.display = 'block';
      document.getElementById('question-container').style.display = 'none';
      document.getElementById('results-container').style.display = 'none';
    }

    bindEvents() {
      document.getElementById('start-btn').addEventListener('click', () => {
        this.startQuiz();
      });
      
      document.getElementById('change-quiz-btn').addEventListener('click', () => {
        this.selectRandomQuiz();
      });
      
      document.getElementById('next-btn').addEventListener('click', () => {
        this.nextQuestion();
      });
      
      document.getElementById('restart-btn').addEventListener('click', () => {
        this.restart();
      });
      
      document.getElementById('new-quiz-btn').addEventListener('click', () => {
        this.selectRandomQuiz();
      });
    }

    startQuiz() {
      this.currentQuestion = 0;
      this.score = 0;
      this.selectedAnswer = null;
      
      document.getElementById('quiz-selector').style.display = 'none';
      document.getElementById('question-container').style.display = 'block';
      document.getElementById('results-container').style.display = 'none';
      
      document.getElementById('current-quiz-name').textContent = this.currentQuizSet.title;
      document.getElementById('total-q').textContent = this.currentQuizSet.questions.length;
      
      this.showQuestion();
    }

    showQuestion() {
      const question = this.currentQuizSet.questions[this.currentQuestion];
      
      // Update progress
      const progress = ((this.currentQuestion + 1) / this.currentQuizSet.questions.length) * 100;
      document.getElementById('progress').style.width = progress + '%';
      
      // Update question number
      document.getElementById('current-q').textContent = this.currentQuestion + 1;
      
      // Update question text
      document.getElementById('question-text').textContent = question.question;
      
      // Create options
      const optionsContainer = document.getElementById('options-container');
      optionsContainer.innerHTML = '';
      
      question.options.forEach((option, index) => {
        const optionElement = document.createElement('div');
        optionElement.className = 'option';
        optionElement.textContent = option;
        optionElement.addEventListener('click', () => this.selectAnswer(index));
        optionsContainer.appendChild(optionElement);
      });
      
      // Hide next button
      document.getElementById('next-btn').style.display = 'none';
      this.selectedAnswer = null;
    }

    selectAnswer(answerIndex) {
      this.selectedAnswer = answerIndex;
      const question = this.currentQuizSet.questions[this.currentQuestion];
      const options = document.querySelectorAll('.option');
      
      // Remove previous selections
      options.forEach(option => {
        option.classList.remove('selected', 'correct', 'incorrect');
      });
      
      // Show correct answer
      options[question.correct].classList.add('correct');
      
      // Show selected answer if incorrect
      if (answerIndex !== question.correct) {
        options[answerIndex].classList.add('incorrect');
      } else {
        this.score++;
      }
      
      // Show explanation
      this.showExplanation(question.explanation);
      
      // Show next button
      document.getElementById('next-btn').style.display = 'block';
      document.getElementById('next-btn').textContent = 
        this.currentQuestion === this.currentQuizSet.questions.length - 1 ? 'See Results' : 'Next Question';
    }

    showExplanation(explanation) {
      const explanationElement = document.createElement('div');
      explanationElement.className = 'explanation';
      explanationElement.innerHTML = `<strong>Explanation:</strong> ${explanation}`;
      document.getElementById('options-container').appendChild(explanationElement);
    }

    nextQuestion() {
      this.currentQuestion++;
      
      if (this.currentQuestion < this.currentQuizSet.questions.length) {
        this.showQuestion();
      } else {
        this.showResults();
      }
    }

    showResults() {
      document.getElementById('question-container').style.display = 'none';
      document.getElementById('results-container').style.display = 'block';
      
      document.getElementById('completed-quiz-name').textContent = this.currentQuizSet.title;
      
      const percentage = Math.round((this.score / this.currentQuizSet.questions.length) * 100);
      
      document.getElementById('score-percentage').textContent = percentage + '%';
      document.getElementById('score-fraction').textContent = `${this.score}/${this.currentQuizSet.questions.length}`;
      
      let message = '';
      if (percentage >= 80) message = 'Excellent! You really know Bitcoin! üèÜ';
      else if (percentage >= 60) message = 'Good job! Keep learning about Bitcoin! üëç';
      else message = 'Keep studying! Bitcoin has lots to discover! üìö';
      
      document.getElementById('score-message').textContent = message;
    }

    restart() {
      this.startQuiz();
    }
  }

  // Start the quiz app
  new BitcoinQuiz(allQuizSets);
</script>

<style>
  .quiz-container {
    max-width: 800px;
    margin: 2rem auto;
    padding: 0 1rem;
  }

  .quiz-header {
    text-align: center;
    margin-bottom: 2rem;
  }

  .quiz-header h1 {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
    color: var(--color-text-base);
  }

  .selector-card, .question-card, .results-card {
    background: var(--color-card);
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 4px 20px rgba(0,0,0,0.1);
  }

  .selector-card {
    text-align: center;
  }

  .selected-quiz {
    margin: 2rem 0;
    padding: 1.5rem;
    background: var(--color-card-muted);
    border-radius: 8px;
    border-left: 4px solid #667eea;
  }

  .selected-quiz h3 {
    margin-bottom: 0.5rem;
    color: #667eea;
  }

  .quiz-info {
    margin-top: 1rem;
    font-weight: 600;
    color: var(--color-text-muted);
  }

  .quiz-meta {
    margin-bottom: 1.5rem;
  }

  .quiz-name {
    font-size: 0.9rem;
    color: var(--color-text-muted);
    margin-bottom: 0.5rem;
    font-weight: 600;
  }

  .progress-bar {
    width: 100%;
    height: 8px;
    background: var(--color-border);
    border-radius: 4px;
    overflow: hidden;
  }

  .progress-fill {
    height: 100%;
    background: linear-gradient(90deg, #667eea, #764ba2);
    transition: width 0.3s ease;
    width: 0%;
  }

  .question-number {
    color: var(--color-text-muted);
    margin-bottom: 1rem;
    font-weight: 500;
  }

  #question-text {
    font-size: 1.5rem;
    margin-bottom: 2rem;
    line-height: 1.4;
  }

  .options {
    display: grid;
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .option {
    padding: 1rem;
    border: 2px solid var(--color-border);
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s ease;
    background: var(--color-card);
  }

  .option:hover {
    border-color: #667eea;
    background: var(--color-card-muted);
  }

  .option.correct {
    border-color: #28a745;
    background: #d4edda;
    color: #155724;
  }

  .option.incorrect {
    border-color: #dc3545;
    background: #f8d7da;
    color: #721c24;
  }

  .explanation {
    margin-top: 1rem;
    padding: 1rem;
    background: var(--color-card-muted);
    border-radius: 8px;
    border-left: 4px solid #667eea;
  }

  .start-button, .change-button, .next-button, .restart-button, .new-quiz-button {
    background: linear-gradient(135deg, #667eea, #764ba2);
    color: white;
    border: none;
    padding: 1rem 2rem;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 600;
    transition: transform 0.2s ease;
    margin: 0.5rem;
  }

  .change-button {
    background: linear-gradient(135deg, #28a745, #20c997);
  }

  .new-quiz-button {
    background: linear-gradient(135deg, #17a2b8, #20c997);
  }

  .start-button:hover, .change-button:hover, .next-button:hover, 
  .restart-button:hover, .new-quiz-button:hover {
    transform: translateY(-2px);
  }

  .results-card {
    text-align: center;
  }

  .completed-quiz {
    margin-bottom: 1rem;
    color: var(--color-text-muted);
    font-size: 1.1rem;
  }

  .score-display {
    margin: 2rem 0;
  }

  .score-circle {
    display: inline-block;
    width: 150px;
    height: 150px;
    border: 8px solid #667eea;
    border-radius: 50%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #667eea, #764ba2);
    color: white;
    margin: 0 auto;
  }

  #score-percentage {
    font-size: 2.5rem;
    font-weight: bold;
  }

  #score-fraction {
    font-size: 1rem;
    opacity: 0.9;
  }

  .result-actions {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
    margin-top: 2rem;
  }

  @media (max-width: 640px) {
    .quiz-header h1 {
      font-size: 2rem;
    }
    
    .selector-card, .question-card, .results-card {
      padding: 1.5rem;
    }
    
    .score-circle {
      width: 120px;
      height: 120px;
    }
    
    #score-percentage {
      font-size: 2rem;
    }

    .result-actions {
      flex-direction: column;
      align-items: center;
    }

    .start-button, .change-button, .next-button, .restart-button, .new-quiz-button {
      width: 100%;
      max-width: 300px;
    }
  }
</style>